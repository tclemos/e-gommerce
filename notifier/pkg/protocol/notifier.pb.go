// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/protocol/notifier.proto

package protocol

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SendEmailRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Content              string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendEmailRequest) Reset()         { *m = SendEmailRequest{} }
func (m *SendEmailRequest) String() string { return proto.CompactTextString(m) }
func (*SendEmailRequest) ProtoMessage()    {}
func (*SendEmailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_089061c83bbd2198, []int{0}
}

func (m *SendEmailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendEmailRequest.Unmarshal(m, b)
}
func (m *SendEmailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendEmailRequest.Marshal(b, m, deterministic)
}
func (m *SendEmailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendEmailRequest.Merge(m, src)
}
func (m *SendEmailRequest) XXX_Size() int {
	return xxx_messageInfo_SendEmailRequest.Size(m)
}
func (m *SendEmailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendEmailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendEmailRequest proto.InternalMessageInfo

func (m *SendEmailRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *SendEmailRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type SendEmailResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendEmailResponse) Reset()         { *m = SendEmailResponse{} }
func (m *SendEmailResponse) String() string { return proto.CompactTextString(m) }
func (*SendEmailResponse) ProtoMessage()    {}
func (*SendEmailResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_089061c83bbd2198, []int{1}
}

func (m *SendEmailResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendEmailResponse.Unmarshal(m, b)
}
func (m *SendEmailResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendEmailResponse.Marshal(b, m, deterministic)
}
func (m *SendEmailResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendEmailResponse.Merge(m, src)
}
func (m *SendEmailResponse) XXX_Size() int {
	return xxx_messageInfo_SendEmailResponse.Size(m)
}
func (m *SendEmailResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendEmailResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendEmailResponse proto.InternalMessageInfo

func (m *SendEmailResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*SendEmailRequest)(nil), "egomerce.notifier.SendEmailRequest")
	proto.RegisterType((*SendEmailResponse)(nil), "egomerce.notifier.SendEmailResponse")
}

func init() { proto.RegisterFile("pkg/protocol/notifier.proto", fileDescriptor_089061c83bbd2198) }

var fileDescriptor_089061c83bbd2198 = []byte{
	// 185 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2e, 0xc8, 0x4e, 0xd7,
	0x2f, 0x28, 0xca, 0x2f, 0xc9, 0x4f, 0xce, 0xcf, 0xd1, 0xcf, 0xcb, 0x2f, 0xc9, 0x4c, 0xcb, 0x4c,
	0x2d, 0xd2, 0x03, 0x8b, 0x08, 0x09, 0xa6, 0xa6, 0xe7, 0xe7, 0xa6, 0x16, 0x25, 0xa7, 0xea, 0xc1,
	0x24, 0x94, 0x9c, 0xb8, 0x04, 0x82, 0x53, 0xf3, 0x52, 0x5c, 0x73, 0x13, 0x33, 0x73, 0x82, 0x52,
	0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x44, 0xb8, 0x58, 0x53, 0x41, 0x7c, 0x09, 0x46, 0x05, 0x46,
	0x0d, 0xce, 0x20, 0x08, 0x47, 0x48, 0x82, 0x8b, 0x3d, 0x39, 0x3f, 0xaf, 0x24, 0x35, 0xaf, 0x44,
	0x82, 0x09, 0x2c, 0x0e, 0xe3, 0x2a, 0x29, 0x73, 0x09, 0x22, 0x99, 0x51, 0x5c, 0x90, 0x9f, 0x57,
	0x9c, 0x2a, 0xc4, 0xc7, 0xc5, 0x94, 0x99, 0x02, 0x35, 0x81, 0x29, 0x33, 0xc5, 0x28, 0x93, 0x8b,
	0xdf, 0x0f, 0x6a, 0x69, 0x70, 0x6a, 0x51, 0x59, 0x66, 0x72, 0xaa, 0x50, 0x18, 0x17, 0x27, 0x5c,
	0x9f, 0x90, 0xb2, 0x1e, 0x86, 0xe3, 0xf4, 0xd0, 0x5d, 0x26, 0xa5, 0x82, 0x5f, 0x11, 0xc4, 0x6a,
	0x27, 0xae, 0x28, 0x0e, 0x58, 0x08, 0x24, 0xb1, 0x81, 0x59, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x19, 0x2c, 0xb1, 0x6b, 0x18, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NotifierServiceClient is the client API for NotifierService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NotifierServiceClient interface {
	SendEmail(ctx context.Context, in *SendEmailRequest, opts ...grpc.CallOption) (*SendEmailResponse, error)
}

type notifierServiceClient struct {
	cc *grpc.ClientConn
}

func NewNotifierServiceClient(cc *grpc.ClientConn) NotifierServiceClient {
	return &notifierServiceClient{cc}
}

func (c *notifierServiceClient) SendEmail(ctx context.Context, in *SendEmailRequest, opts ...grpc.CallOption) (*SendEmailResponse, error) {
	out := new(SendEmailResponse)
	err := c.cc.Invoke(ctx, "/egomerce.notifier.NotifierService/SendEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NotifierServiceServer is the server API for NotifierService service.
type NotifierServiceServer interface {
	SendEmail(context.Context, *SendEmailRequest) (*SendEmailResponse, error)
}

// UnimplementedNotifierServiceServer can be embedded to have forward compatible implementations.
type UnimplementedNotifierServiceServer struct {
}

func (*UnimplementedNotifierServiceServer) SendEmail(ctx context.Context, req *SendEmailRequest) (*SendEmailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendEmail not implemented")
}

func RegisterNotifierServiceServer(s *grpc.Server, srv NotifierServiceServer) {
	s.RegisterService(&_NotifierService_serviceDesc, srv)
}

func _NotifierService_SendEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotifierServiceServer).SendEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/egomerce.notifier.NotifierService/SendEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotifierServiceServer).SendEmail(ctx, req.(*SendEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NotifierService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "egomerce.notifier.NotifierService",
	HandlerType: (*NotifierServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendEmail",
			Handler:    _NotifierService_SendEmail_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/protocol/notifier.proto",
}
